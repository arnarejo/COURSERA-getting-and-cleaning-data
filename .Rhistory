gdp <- read.csv(gdpurl, header = FALSE, na.strings = "")
head(gdp)
dim(gdp)
head(gdp, n = 20)
gdp <- gdp[6:, ]
tail(gdp, n = 20)
gdp <- gdp[6:331, ]
head(gdp)
tail(gdp)
head(gdp, n = 25)
head(gdp, n = 50)
gdp <- gdp[,1:5]
head(gdp)
gdp$V3 <- NULL
head(gdp)
names(gdp) <- c("CountryCode", "Ranking", "GDP")
head(gdp)
names(gdp) <- c("CountryCode", "Ranking", "CountryName", "GDP")
head(gdp)
names(gdp)
tail(gdp)
dim(gdp)
gdp %>% filter(!is.na(Ranking)) %>% dim()
gdp <- gdp %>% filter(!is.na(Ranking))
head(gdp)
tail(gdp)
head(gdp)
dim(gdp)
tail(gdp)
head(education)
dim(education)
merged <- merge(gdp, education, by = "CountryCode")
dim(merged)
merged %>% arrange(desc(GDP))
merged %>% arrange(desc(GDP)) %>% head()
class(merged$GDP)
merged$GDP <- as.numeric(merged$GDP)
merged %>% arrange(desc(GDP)) %>% head()
head(gdp)
class(gdp$GDP)
class(as.numeric(gdp$GDP))
head(gdp)
class(16,244,600)
head(gdp)
class(gdp$GDP)
head(as.numeric(gdp$GDP))
head(gdp)
gdp <- read.csv(gdpurl, header = FALSE, na.strings = "", stringsAsFactors = FALSE)
head(gdp)
class(gdp$V5)
gdp <- read.csv(gdpurl, header = FALSE, na.strings = "", stringsAsFactors = FALSE, skip = 5)
head(gdp)
class(gdp$V4)
gdp$V4 <- as.numeric(gdp$V4)
head(gdp)
class(gdp$V4)
gdp <- read.csv(gdpurl, header = FALSE, na.strings = "", stringsAsFactors = FALSE, skip = 5)
gdp$V5 <- as.numeric(gdp$V5)
head(gdp)
gdp <- read.csv(gdpurl, header = FALSE, na.strings = "", stringsAsFactors = F, skip = 5)
str(gdp)
gdp <- read.csv(gdpurl, header = FALSE, na.strings = "", skip = 5)
head(gdp)
str(gdp)
head(gdp)
class(gdp$V5)
gdp$V5 <- as.integer(gdp$V5)
head(gdp)
gdp <- read.csv(gdpurl, header = FALSE, na.strings = "", skip = 5, stringsAsFactors = FALSE)
head(gdp)
class(gdp$V5)
str(gdp)
gdp$V5 <- as.numeric(gdp$V5)
str(gdp)
head(gdp)
gdp <- read.csv(gdpurl, header = FALSE, na.strings = "", skip = 5, stringsAsFactors = FALSE)
gdp$V5 <- as.numeric(as.character(gdp$V5))
head(gdp)
gdp <- read.csv(gdpurl, header = FALSE, na.strings = "", skip = 5, stringsAsFactors = FALSE)
head(gdp)
str(gdp)
library(stringr)
gdp$V5 <- str_trim(gdp$V5)
str(gdp)
gdp$V5 <- as.numeric(gdp$V5)
str(gdp)
str(gdp)
gdp <- read.csv(gdpurl, header = FALSE, na.strings = "", skip = 5, stringsAsFactors = FALSE)
head(gdp)
str(gdp)
gdp$V5 <- str_trim(gdp$V5)
head(gdp)
gdp <- gdp[,1:6]
head(gdp)
gdp <- gdp[,-3]
head(gdp)
gdp <- gdp[,-5]
head(gdp)
tail(gdp)
tail(gdp, 30)
tail(gdp, 50)
tail(gdp, 100)
gdp[100:110,]
gdp[200:210,]
gdp[150:170,]
gdp[170:190,]
gdp[190:200,]
sum(is.na(gdp$V2))
dim(gdp)
gdp <- gdp[!is.na(gdp$V2),]
head(gdp)
tail(gdp)
dim(gdp)
head(gdp)
tail(gdp)
gdp <- gdp[!is.na(gdp$V2) | !is.na(gdp$V1),]
tail(gdp)
head(gdp)
str(gdp)
gdp1 <- gdp
head(gdp1)
gdp1$V5 <- as.numeric(gdp1$V5)
head(gdp1)
head(gdp)
tail(gdp)
gdp %>% filter(is.na(V1))
tail(gdp)
gdp <- gdp[1:190,]
head(gdp)
tail(gdp)
sum(is.na(gdp$V5))
sum(is.na(gdp$V2))
gdp$V5 <- as.numeric(gdp$V5)
str(gdp)
head(gdp)
gdp <- read.csv(gdpurl, header = FALSE, na.strings = "", skip = 5, stringsAsFactors = FALSE)
str(gdp)
dim(gdp)
gdp <- gdp[!is.na(gdp$V2),]
dim(gdp)
head(gdp)
tail(gdp)
sum(!is.na(gdp$V2))
dim(gdp)
str(gdp)
head(gdp)
tail(gdp)
str(gdp)
gdp$V2 <- as.factor(gdp$V2)
tail(gdp$V2)
tail(gdp)
gdp <- gdp[1:190,]
tail(gdp)
str(gdp)
gdp$V5 <- str_trim(gdp$V5)
str(gdp)
tail(gdp)
class(gdp$V5)
head(gdp)
x <- as.character("16,244,600")
class(x)
x <- as.numeric(x)
x
x <- as.numeric(as.factor(x))
x
x
x <- as.character("16,244,600")
x
class(x)
x <- as.numeric(as.character(x))
x
as.numeric("222")
x
x <- as.character("16,244,600")
?as.numeric
sum(gdp$V5)
head(gdp)
sum(as.numeric(gdp$V5))
tail(gdp)
class(gdp$V2)
library(data.table)
x <- fread(gdpurl)
head(x)
x <- fread(gdpurl, skip = 5)
head(gdp)
head(x)
str(x)
x$V5 <- str_trim(x$V5)
str(x)
x$V5 <- as.numeric(x$V5)
str(x)
x <- as.character("16,244,600")
x <- as.numeric(x)
x
x <- as.character("16,244,600")
x <- as.character("16244600")
x <- as.numeric(x)
x
gdp <- read.csv(gdpurl, header = FALSE, na.strings = "", skip = 5, stringsAsFactors = FALSE)
head(gdp)
gdp <- read.csv(gdpurl, header = FALSE, na.strings = "", skip = 5, stringsAsFactors = FALSE, colClasses = c("factor", "factor", "character", "character", "numeric"))
gdp <- read.csv(gdpurl, header = FALSE, na.strings = "", skip = 5, stringsAsFactors = FALSE)
head(gdp)
str(gdp)
gdp$V5 <- str_trim(gdp$V5)
str(gdp)
head(gdp)
tail(gdp)
gdp[180:200,]
gdp <- gdp[1:190,1:5]
head(gdp)
tail(gdp)
gdp <- gdp[,-3]
head(gdp)
tail(gdp)
sum(is.na(gdp$V1))
sum(is.na(gdp$V2))
sum(is.na(gdp$V4))
sum(is.na(gdp$V5))
sapply(gdp, class)
gdp_copy <- gdp
head(gdp_copy)
class(gdp$V5)
ghub(",", "", "16,244,600")
gsub(",", "", "16,244,600")
as.numeric(gsub(",", "", "16,244,600"))
gdp_copy$V5 <- as.numeric(gsub(",", "", gdp_copy$V5))
head(gdp_copy)
sapply(gdp, class)
sapply(gdp_copy, class)
gdp_copy$V2 <- as.numeric(gdp$V2)
gdp_copy$V2 <- as.numeric(gdp_copy$V2)
sapply(gdp_copy, class)
head(gdp_copy)
head(education)
head(gdp_copy)
names(gdp_copy) <- c("CountryCode", "Ranking", "Country", "GDP")
head(gdp_copy)
str(education)
dim(gdp_copy)
dim(education)
merged <- merge(gdp_copy, education, by = "CountryCode")
dim(merged)
head(merged)
merged <- filter(CountryCode, Ranking, Country, GDP) %>% arrange(desc(GDP)) %>% head()
names(merged)
merged %>% filter(CountryCode, Ranking, Country, GDP) %>% arrange(desc(GDP))
head(merged[1:5,])
head(merged[,1:5])
head(merged[,1:5]) %>% arrange(desc(GDP))
head(merged[,1:5]) %>% arrange(desc(GDP)) %>% n(10)
head(merged[,1:5]) %>% arrange(desc(GDP)) %>% head()
head(merged[,1:5]) %>% arrange(desc(GDP)) %>% tail()
head(merged[,1:5]) %>% arrange(GDP) %>% head()
head(merged[,1:5]) %>% arrange(GDP)
merged[,1:5] %>% arrange(GDP) %>% head()
merged[,1:5] %>% arrange(desc(GDP)) %>% head()
merged[,1:5] %>% arrange(GDP) %>% tail()
merged[,1:5] %>% arrange(GDP) %>% head()
merged[,1:5] %>% arrange(GDP) %>% head(n=13)
merged[,1:5] %>% arrange(GDP) %>% tail(n=13)
merged[,1:5] %>% arrange(desc(ranking)) %>% head(n = 13)
merged[,1:5] %>% arrange(desc(Ranking)) %>% head(n = 13)
merged[,1:5] %>% arrange(desc(Ranking)) %>% tail(n = 13)
merged[,1:5] %>% arrange(desc(Ranking)) %>% head(n = 13)
names(merged)
head(merged)
merged %>% filter(Income.Group == "High income: nonOECD") %>% count()
merged %>% filter(Income.Group == "High income: nonOECD") %>% summarise(mean = mean(Ranking))
head(merged)
quantile(gdp$GDP, probs = seq(0, 1, 0.2))
quantile(merged$GDP, probs = seq(0, 1, 0.2))
merged %>% filter(GDP >= 262691.0 & Income.Group == "Lower middle income") %>% count()
date()
class(date())
Sys.Date()
class(Sys.Date())
library(swirl())
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = "lubridate")
help(package = lubridate)
today()
this_day <- today()
this_Day
this_day
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_month <- now()
this_moment <- now()
this_moment
minute(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_Date
my_Date
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1 92 012")
ymd("19/2/012")
dmy("19/2/012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment, hours = 8, minutes = 34, seconds = 55)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nyc <- now("America/New_York")
nyc
nyc + days(2)
depart <- nyc + days(2)
deaprt
depart
update(depart, hours = 17, minutes = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive <-0 with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval()
?interval
how_long <- interval(arrive - last_time)
how_long <- interval(arrive - last_time)
how_long <- interval(arrive - last_time,tzone = tz(end))
how_long <- interval(arrive - last_time,tzone = tz(start))
how_long <- interval(arrive,last_time)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
data <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
names(data)
sapply(names(data), strsplit("wgtp"))
names(data)
?strsplit
strsplit(names(data), "wgtp")
strsplit(names(data), "wgtp")[123]
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", skip = 5)
head(gdp)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", skip = 4, stringsAsFactors = FALSE)
head(gdp)
gdp <- gdp[,1:5]
head(gdp)
names(gdp) <- c("countrycode", "rank", "country", "gdp")
library(stringr)
gdp$gdp <- str_trim(gdp$gdp)
str(gdp)
tai(gdp)
tail(gdp)
gdp[180-200,]
gdp <- gdp[1:190,]
dim(gdp)
gdp$gdp <- sub(",", "", gdp$gdp)
head(gdp)
gdp$gdp <- gsub(",", "", gdp$gdp)
head(gdp)
gdp$gdp <- gsub(',', ' ', gdp$gdp)
head(gdp)
gdp <- gdp[,-3]
names(gdp) <- c("countrycode", "rank", "country", "gdp")
head(gdp)
gdp$gdp <- sub(",", "", gdp$gdp)
head(gdp)
gdp$gdp <- as.numeric(gdp$gdp)
str(gdp)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", skip = 4, stringsAsFactors = FALSE)
gdp
head(gdp)
gdp <- gdp[1:190, 1:5]
head(gdp)
tail(gdp)
gdp$X.4 <- str_trim((gdp$X.4))
head(gdp)
gdp$X.4 <- gsub(",", "", gdp$X.4)
head(gdp)
gdp$X.4 <- as.numeric(gdp$X.4)
str(gdp)
mean(gdp$X.4)
grep("^United", gdp$X.3)
head(gdp)
education <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
head(education)
head(gdp)
names(gdp) <- c("CountryCode", "Ranking", "Nothing", "Country", "GDP")
head(gdp)
merged <- merge(gdp, education, by = "CountryCode")
head(merged)
names(merged)
head(merged, n = 10)
name(merged)
names(merged)
tail(merged, n = 10)
merged$Special.Notes
grep("Fiscal year end: June 30",merged$Special.Notes)
grep("^Fiscal year end: June 30",merged$Special.Notes)
length(grep("Fiscal year end: June 30",merged$Special.Notes))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(amzn)
str(amzn)
head(amzn[,0])
head(amzn[,1])
head(amzn[,])
head(amzn[,0])
length(grep("2012",amzn[,0]))
head(amzn)
amzn$year <- year(amzn[,0])
head(amzn)
length(grep("2012", amzn$year))
X_train <- read.csv("data/train/X_train.txt")
Sys.sleep(10); message("wait is over")
if (!file.exists("./datax")) {
# 2.2 download data
if (!file.exists("./zipData.zip")) {
message("Downloading dataset")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip",
destfile = "./zipData.zip",
method = "curl",
mode = "wb")
# take a break till the zip file is downloaded
Sys.sleep(20)
message("Extracting dataset")
unzip("./zipData.zip",
overwrite = FALSE,
exdir = "./")
file.rename("./UCI HAR Dataset", "./datax")
message("succcessfully renamed")
}
} else {
message("folder already exists")
}
if (!file.exists("./zipData.zip")) {
message("Downloading dataset")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip",
destfile = "./zipData.zip",
method = "curl",
mode = "wb")
# take a break till the zip file is downloaded
message("download complete")
}
if (!file.exists("./datax")) {
# 2.2 download data
if (!file.exists("./zipData.zip")) {
message("Downloading dataset")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip",
destfile = "./zipData.zip",
method = "curl",
mode = "wb")
# take a break till the zip file is downloaded
message("download complete")
}
} else {
message("folder already exists")
}
setwd("~/Documents/PROGRAMMING/Coursera/DS/assignments/mobile-data")
if (!file.exists("./datax")) {
# 2.2 download data
if (!file.exists("./zipData.zip")) {
message("Downloading dataset")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip",
destfile = "./zipData.zip",
method = "curl",
mode = "wb")
# take a break till the zip file is downloaded
message("download complete")
}
message("another message")
} else {
message("folder already exists")
}
if (!file.exists("./datax")) {
# 2.2 download data
if (!file.exists("./zipData.zip")) {
message("Downloading dataset")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip",
destfile = "./zipData.zip",
method = "curl",
mode = "wb")
# take a break till the zip file is downloaded
message("download complete")
message("Extracting dataset")
unzip("./zipData.zip",
overwrite = FALSE,
exdir = "./")
file.rename("./UCI HAR Dataset", "./datax")
message("succcessfully renamed")
}
message("another message")
} else {
message("folder already exists")
}
